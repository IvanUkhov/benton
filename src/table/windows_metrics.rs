use primitive::*;

#[derive(Clone, Debug, Eq, PartialEq)]
pub enum WindowsMetrics {
    Version3(WindowsMetrics3),
    Version5(WindowsMetrics5),
}

spec! {
    pub WindowsMetrics3 {
        version             (UShort   ),
        xAvgCharWidth       (Short    ),
        usWeightClass       (UShort   ),
        usWidthClass        (UShort   ),
        fsType              (UShort   ),
        ySubscriptXSize     (Short    ),
        ySubscriptYSize     (Short    ),
        ySubscriptXOffset   (Short    ),
        ySubscriptYOffset   (Short    ),
        ySuperscriptXSize   (Short    ),
        ySuperscriptYSize   (Short    ),
        ySuperscriptXOffset (Short    ),
        ySuperscriptYOffset (Short    ),
        yStrikeoutSize      (Short    ),
        yStrikeoutPosition  (Short    ),
        sFamilyClass        (Short    ),
        panose              (Vec<Byte>) |band, this| { read_vector!(band, 10) },
        ulUnicodeRange1     (ULong    ),
        ulUnicodeRange2     (ULong    ),
        ulUnicodeRange3     (ULong    ),
        ulUnicodeRange4     (ULong    ),
        achVendID           (Vec<Char>) |band, this| { read_vector!(band, 4) },
        fsSelection         (UShort   ),
        usFirstCharIndex    (UShort   ),
        usLastCharIndex     (UShort   ),
        sTypoAscender       (Short    ),
        sTypoDescender      (Short    ),
        sTypoLineGap        (Short    ),
        usWinAscent         (UShort   ),
        usWinDescent        (UShort   ),
        ulCodePageRange1    (ULong    ),
        ulCodePageRange2    (ULong    ),
        sxHeight            (Short    ),
        sCapHeight          (Short    ),
        usDefaultChar       (UShort   ),
        usBreakChar         (UShort   ),
        usMaxContext        (UShort   ),
    }
}

spec! {
    pub WindowsMetrics5 {
        version                 (UShort   ),
        xAvgCharWidth           (Short    ),
        usWeightClass           (UShort   ),
        usWidthClass            (UShort   ),
        fsType                  (UShort   ),
        ySubscriptXSize         (Short    ),
        ySubscriptYSize         (Short    ),
        ySubscriptXOffset       (Short    ),
        ySubscriptYOffset       (Short    ),
        ySuperscriptXSize       (Short    ),
        ySuperscriptYSize       (Short    ),
        ySuperscriptXOffset     (Short    ),
        ySuperscriptYOffset     (Short    ),
        yStrikeoutSize          (Short    ),
        yStrikeoutPosition      (Short    ),
        sFamilyClass            (Short    ),
        panose                  (Vec<Byte>) |band, this| { read_vector!(band, 10) },
        ulUnicodeRange1         (ULong    ),
        ulUnicodeRange2         (ULong    ),
        ulUnicodeRange3         (ULong    ),
        ulUnicodeRange4         (ULong    ),
        achVendID               (Vec<Char>) |band, this| { read_vector!(band, 4) },
        fsSelection             (UShort   ),
        usFirstCharIndex        (UShort   ),
        usLastCharIndex         (UShort   ),
        sTypoAscender           (Short    ),
        sTypoDescender          (Short    ),
        sTypoLineGap            (Short    ),
        usWinAscent             (UShort   ),
        usWinDescent            (UShort   ),
        ulCodePageRange1        (ULong    ),
        ulCodePageRange2        (ULong    ),
        sxHeight                (Short    ),
        sCapHeight              (Short    ),
        usDefaultChar           (UShort   ),
        usBreakChar             (UShort   ),
        usMaxContext            (UShort   ),
        usLowerOpticalPointSize (UShort   ),
        usUpperOpticalPointSize (UShort   ),
    }
}
